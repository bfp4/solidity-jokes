{
  "contractName": "Jokes",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jokes",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "joke",
          "type": "string"
        },
        {
          "name": "punchline",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa64d4998"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "jokesCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xbc0fbb21"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "joke",
          "type": "string"
        },
        {
          "name": "punchline",
          "type": "string"
        }
      ],
      "name": "setJoke",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x88bd395f"
    }
  ],
  "bytecode": "0x60806040526000805534801561001457600080fd5b506100986040805190810160405280600481526020017f636f6f6c000000000000000000000000000000000000000000000000000000008152506040805190810160405280600581526020017f6265616e7300000000000000000000000000000000000000000000000000000081525061009d640100000000026401000000009004565b6101a8565b60008054600190810180835560408051606081018252828152602080820188815282840188905293865284815291909420845181559151805192936100ea9390850192919091019061010d565b506040820151805161010691600284019160209091019061010d565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014e57805160ff191683800117855561017b565b8280016001018555821561017b579182015b8281111561017b578251825591602001919060010190610160565b5061018792915061018b565b5090565b6101a591905b808211156101875760008155600101610191565b90565b610542806101b76000396000f3fe6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166388bd395f811461005b578063a64d499814610197578063bc0fbb21146102a6575b600080fd5b34801561006757600080fd5b506101956004803603604081101561007e57600080fd5b81019060208101813564010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561012057600080fd5b82018360208201111561013257600080fd5b8035906020019184600183028401116401000000008311171561015457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102cd945050505050565b005b3480156101a357600080fd5b506101c1600480360360208110156101ba57600080fd5b503561033d565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156102085781810151838201526020016101f0565b50505050905090810190601f1680156102355780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610268578181015183820152602001610250565b50505050905090810190601f1680156102955780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156102b257600080fd5b506102bb610475565b60408051918252519081900360200190f35b600080546001908101808355604080516060810182528281526020808201888152828401889052938652848152919094208451815591518051929361031a9390850192919091019061047b565b506040820151805161033691600284019160209091019061047b565b5050505050565b600160208181526000928352604092839020805481840180548651600296821615610100026000190190911695909504601f810185900485028601850190965285855290949193929091908301828280156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b50505060028085018054604080516020601f600019610100600187161502019094169590950492830185900485028101850190915281815295969594509092509083018282801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050905083565b60005481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104bc57805160ff19168380011785556104e9565b828001600101855582156104e9579182015b828111156104e95782518255916020019190600101906104ce565b506104f59291506104f9565b5090565b61051391905b808211156104f557600081556001016104ff565b9056fea165627a7a72305820e9d6ae8b646b8a0eab852e2074a20a13fe854c79ad2b5f004a353112ada2a6290029",
  "deployedBytecode": "0x6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166388bd395f811461005b578063a64d499814610197578063bc0fbb21146102a6575b600080fd5b34801561006757600080fd5b506101956004803603604081101561007e57600080fd5b81019060208101813564010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561012057600080fd5b82018360208201111561013257600080fd5b8035906020019184600183028401116401000000008311171561015457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102cd945050505050565b005b3480156101a357600080fd5b506101c1600480360360208110156101ba57600080fd5b503561033d565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156102085781810151838201526020016101f0565b50505050905090810190601f1680156102355780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610268578181015183820152602001610250565b50505050905090810190601f1680156102955780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156102b257600080fd5b506102bb610475565b60408051918252519081900360200190f35b600080546001908101808355604080516060810182528281526020808201888152828401889052938652848152919094208451815591518051929361031a9390850192919091019061047b565b506040820151805161033691600284019160209091019061047b565b5050505050565b600160208181526000928352604092839020805481840180548651600296821615610100026000190190911695909504601f810185900485028601850190965285855290949193929091908301828280156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b50505060028085018054604080516020601f600019610100600187161502019094169590950492830185900485028101850190915281815295969594509092509083018282801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050905083565b60005481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104bc57805160ff19168380011785556104e9565b828001600101855582156104e9579182015b828111156104e95782518255916020019190600101906104ce565b506104f59291506104f9565b5090565b61051391905b808211156104f557600081556001016104ff565b9056fea165627a7a72305820e9d6ae8b646b8a0eab852e2074a20a13fe854c79ad2b5f004a353112ada2a6290029",
  "sourceMap": "76:434:0:-;;;123:1;98:26;;271:64;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:64:0;303:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;;;:24;;;:::i;:::-;76:434;;343:164;423:10;:12;;;;;;;;;466:33;;;;;;;;;;;;;;;;;;;;;;;;446:17;;;;;;;;;;:53;;;;;;;;:17;;:53;;;;;;;;;;;;:::i;:::-;-1:-1:-1;446:53:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;343:164:0:o;76:434::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;76:434:0;;;-1:-1:-1;76:434:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "76:434:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;343:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;343:164:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;343:164:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;343:164:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;343:164:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;343:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;343:164:0;;;;;;;;-1:-1:-1;343:164:0;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;343:164:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;343:164:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;343:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;343:164:0;;-1:-1:-1;343:164:0;;-1:-1:-1;;;;;343:164:0;;;228:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:34:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;228:34:0;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:26:0;;;;;;;;;;;;;;;;;;;;343:164;423:10;:12;;;;;;;;;466:33;;;;;;;;;;;;;;;;;;;;;;;;446:17;;;;;;;;;;:53;;;;;;;;:17;;:53;;;;;;;;;;;;:::i;:::-;-1:-1:-1;446:53:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;343:164:0:o;228:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;228:34:0;;;;;;;;;;;-1:-1:-1;;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;228:34:0;;-1:-1:-1;228:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;98:26::-;;;;:::o;76:434::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;76:434:0;;;-1:-1:-1;76:434:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLISENCED\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Jokes {\r\n    uint public jokesCount = 0;\r\n\r\n    struct Joke {\r\n        uint id;\r\n        string joke;\r\n        string punchline;\r\n    }\r\n\r\n    mapping(uint => Joke) public jokes;\r\n\r\n    constructor() public {\r\n        setJoke(\"cool\", \"beans\");\r\n    }\r\n\r\n    function setJoke(string memory joke, string memory punchline) public {\r\n        jokesCount++;\r\n        jokes[jokesCount] = Joke(jokesCount, joke, punchline);\r\n    }\r\n}",
  "sourcePath": "C:/Users/gener/OneDrive/Desktop/solidity-jokes/contracts/Jokes.sol",
  "ast": {
    "absolutePath": "/C/Users/gener/OneDrive/Desktop/solidity-jokes/contracts/Jokes.sol",
    "exportedSymbols": {
      "Jokes": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46
        ],
        "name": "Jokes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "jokesCount",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "98:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "98:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Jokes.Joke",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "156:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "156:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "joke",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "174:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "punchline",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "196:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "196:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Joke",
            "nodeType": "StructDefinition",
            "scope": 46,
            "src": "133:87:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "jokes",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "228:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
              "typeString": "mapping(uint256 => struct Jokes.Joke)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "228:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
                "typeString": "mapping(uint256 => struct Jokes.Joke)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "Joke",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "244:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Joke_$11_storage_ptr",
                  "typeString": "struct Jokes.Joke"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "292:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6f6c",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "311:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
                          "typeString": "literal_string \"cool\""
                        },
                        "value": "cool"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6265616e73",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "319:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e246129de4a8a291c1d772650ceca0ebb56dd9996b985e6ce3e45a2e515cc577",
                          "typeString": "literal_string \"beans\""
                        },
                        "value": "beans"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
                          "typeString": "literal_string \"cool\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e246129de4a8a291c1d772650ceca0ebb56dd9996b985e6ce3e45a2e515cc577",
                          "typeString": "literal_string \"beans\""
                        }
                      ],
                      "id": 18,
                      "name": "setJoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "303:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "303:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "303:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:0"
            },
            "scope": 46,
            "src": "271:64:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "412:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "423:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "jokesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "423:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "423:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "jokes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "446:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
                          "typeString": "mapping(uint256 => struct Jokes.Joke storage ref)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "jokesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "452:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "446:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Joke_$11_storage",
                        "typeString": "struct Jokes.Joke storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "jokesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "471:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "joke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "483:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "punchline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "489:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 37,
                        "name": "Joke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "466:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Joke_$11_storage_ptr_$",
                          "typeString": "type(struct Jokes.Joke storage pointer)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "466:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Joke_$11_memory",
                        "typeString": "struct Jokes.Joke memory"
                      }
                    },
                    "src": "446:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Joke_$11_storage",
                      "typeString": "struct Jokes.Joke storage ref"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "446:53:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setJoke",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "joke",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "360:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "name": "punchline",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "380:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:45:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:0"
            },
            "scope": 46,
            "src": "343:164:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "76:434:0"
      }
    ],
    "src": "40:470:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/gener/OneDrive/Desktop/solidity-jokes/contracts/Jokes.sol",
    "exportedSymbols": {
      "Jokes": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46
        ],
        "name": "Jokes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "jokesCount",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "98:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "98:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Jokes.Joke",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "156:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "156:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "joke",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "174:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "punchline",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "196:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "196:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Joke",
            "nodeType": "StructDefinition",
            "scope": 46,
            "src": "133:87:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "jokes",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "228:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
              "typeString": "mapping(uint256 => struct Jokes.Joke)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "228:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
                "typeString": "mapping(uint256 => struct Jokes.Joke)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "Joke",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "244:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Joke_$11_storage_ptr",
                  "typeString": "struct Jokes.Joke"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "292:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6f6c",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "311:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
                          "typeString": "literal_string \"cool\""
                        },
                        "value": "cool"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6265616e73",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "319:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e246129de4a8a291c1d772650ceca0ebb56dd9996b985e6ce3e45a2e515cc577",
                          "typeString": "literal_string \"beans\""
                        },
                        "value": "beans"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
                          "typeString": "literal_string \"cool\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e246129de4a8a291c1d772650ceca0ebb56dd9996b985e6ce3e45a2e515cc577",
                          "typeString": "literal_string \"beans\""
                        }
                      ],
                      "id": 18,
                      "name": "setJoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "303:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "303:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "303:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:0"
            },
            "scope": 46,
            "src": "271:64:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "412:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "423:12:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "jokesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "423:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "423:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "jokes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "446:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Joke_$11_storage_$",
                          "typeString": "mapping(uint256 => struct Jokes.Joke storage ref)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "jokesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "452:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "446:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Joke_$11_storage",
                        "typeString": "struct Jokes.Joke storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "jokesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "471:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "joke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "483:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "punchline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "489:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 37,
                        "name": "Joke",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "466:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Joke_$11_storage_ptr_$",
                          "typeString": "type(struct Jokes.Joke storage pointer)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "466:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Joke_$11_memory",
                        "typeString": "struct Jokes.Joke memory"
                      }
                    },
                    "src": "446:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Joke_$11_storage",
                      "typeString": "struct Jokes.Joke storage ref"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "446:53:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setJoke",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "joke",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "360:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "name": "punchline",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "380:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:45:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:0"
            },
            "scope": 46,
            "src": "343:164:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "76:434:0"
      }
    ],
    "src": "40:470:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC4De148Dd98C77d4367b7ba6Cf7D39FdB0Db98eC",
      "transactionHash": "0x4a4ddc183eecce9073bc742a586b587eb4cca22258c3a268c2d5845228bff878"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2022-01-18T20:59:06.132Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}